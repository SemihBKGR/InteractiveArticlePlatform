package app.gui.panel;

import app.Contracts;
import app.util.ClickListener;
import app.util.Resources;
import app.util.TypeConverts;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import core.entity.Article;
import core.entity.User;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.LineBorder;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;

public class TabPanel {

    private static final int TITLE_LENGTH = 25;
    private static final String END = "...";

    private JPanel panel;

    private JLabel imageLabel;
    private JLabel titleLabel;
    private JLabel closeLabel;

    private TabPanel(ClickListener clickListener) {

        titleLabel.setForeground(Color.WHITE);
        closeLabel.setIcon(Resources.getImageIcon("close.png"));

        imageLabel.setBorder(new LineBorder(Color.BLACK, 1));
        panel.setBorder(new LineBorder(Color.BLACK, 2));

        closeLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                clickListener.clicked();
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                panel.setBackground(Contracts.DEFAULT_LIGHT_GRAY);
                closeLabel.setIcon(Resources.getImageIcon("closeReverse.png"));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                panel.setBackground(Contracts.DEFAULT_GRAY);
                closeLabel.setIcon(Resources.getImageIcon("close.png"));
            }
        });


    }

    public TabPanel(Article article, ClickListener clickListener) {
        this(clickListener);
        titleLabel.setText(TypeConverts.getFixedSizeText(article.getTitle(), TITLE_LENGTH, END));
        imageLabel.setIcon(Resources.smallestPencilImageIcon);
    }

    public TabPanel(User user, ClickListener clickListener) {
        this(clickListener);
        titleLabel.setText(TypeConverts.getFixedSizeText(user.getUsername(), TITLE_LENGTH, END));
        if (user.getInformation().getImage() != null) {
            ByteArrayInputStream imageStream = new ByteArrayInputStream(user.getInformation().getImage());
            try {
                ImageIcon imageIcon = new ImageIcon(Resources.resizeSmallestSize(ImageIO.read(imageStream)));
                imageLabel.setIcon(imageIcon);
            } catch (IOException e) {
                e.printStackTrace();
                imageLabel.setIcon(Resources.smallestDefaultImageIcon);
            }
        } else {
            imageLabel.setIcon(Resources.smallestDefaultImageIcon);
        }
    }

    public JPanel getPanel() {
        return panel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(1, 5, new Insets(2, 5, 2, 5), -1, -1));
        imageLabel = new JLabel();
        imageLabel.setText("");
        panel.add(imageLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        titleLabel = new JLabel();
        titleLabel.setText("");
        panel.add(titleLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        closeLabel = new JLabel();
        closeLabel.setText("");
        panel.add(closeLabel, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel.add(spacer2, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}

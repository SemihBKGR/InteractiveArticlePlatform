package app.gui.frame;

import app.gui.page.MenuPage;
import app.gui.page.ProfilePage;
import app.gui.page.SearchPage;
import app.gui.panel.ButtonPanel;
import app.util.Paged;
import app.util.Resources;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import core.DataHandler;
import core.entity.Article;
import core.entity.User;

import javax.swing.*;
import java.awt.*;

import static app.Contracts.FRAME_TITLE;

public class AppFrame extends JFrame implements Paged {

    private JPanel panel;
    private JPanel centerPanel;
    private JToolBar buttonToolBar;

    private final ProfilePage profilePage;
    private final SearchPage searchPage;
    private final MenuPage homePage;

    private ButtonPanel buttonPanel;

    private void createUIComponents() {
        buttonPanel = new ButtonPanel(this, () -> {
            profilePage.stop();
            DataHandler.getDataHandler().getChatService().saveMessagesInLogFiles();
            DataHandler.getDataHandler().getChatService().clearChatService();
            dispose();
            new TransactionFrame().setVisible(true);
        });
        buttonToolBar = buttonPanel.getButtonToolBar();
    }


    public AppFrame() {

        super(FRAME_TITLE);
        setIconImage(Resources.getImageIcon("article.png").getImage());
        $$$setupUI$$$();
        setMinimumSize(new Dimension(1000, 750));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        add(panel);

        profilePage = new ProfilePage(this);
        searchPage = new SearchPage(this);
        homePage = new MenuPage();

        centerPanel.add(profilePage.getPanel(), ButtonPanel.ActiveButton.profile.toString());
        centerPanel.add(searchPage.getPanel(), ButtonPanel.ActiveButton.search.toString());
        centerPanel.add(homePage.getPanel(), ButtonPanel.ActiveButton.menu.toString());

        profilePage.start();

        DataHandler.getDataHandler().connectWebSocketAsync();
        DataHandler.getDataHandler().subscribeChatSocketAndLoadMessagesAsync(chatMessage -> {
        });

    }

    @Override
    public void changePage(String pageName) {
        CardLayout cardLayout = (CardLayout) centerPanel.getLayout();
        cardLayout.show(centerPanel, pageName);
    }

    @Override
    public void changePage(String pageName, Object... items) {
        if (pageName.equals(ButtonPanel.ActiveButton.menu.toString())) {
            if (items[0] instanceof Article) {
                homePage.loadArticlePanel((Article) items[0], this);
            } else if (items[0] instanceof User) {
                homePage.loadUserPanel((User) items[0], this);
            }
        }
        changePage(pageName);
        buttonPanel.setExplicitlyActive(ButtonPanel.ActiveButton.valueOf(pageName));
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        centerPanel = new JPanel();
        centerPanel.setLayout(new CardLayout(0, 0));
        panel.add(centerPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel.add(buttonToolBar, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 20), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
